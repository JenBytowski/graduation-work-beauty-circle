// <auto-generated />
using System;
using BC.API.Services.BookingService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BC.API.Services.BookingService.Data.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20201003102103_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("booking")
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BC.API.Services.BookingService.Data.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ConnectedBookingsPrefered")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PreferedGapInMinutes")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.ScheduleDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleDays");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.ScheduleDayItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ScheduleDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleDayId");

                    b.ToTable("ScheduleDayItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ScheduleDayItem");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.Booking", b =>
                {
                    b.HasBaseType("BC.API.Services.BookingService.Data.ScheduleDayItem");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Booking_Description");

                    b.Property<int>("DurationInMinutesMax")
                        .HasColumnType("int");

                    b.Property<int>("PriceMax")
                        .HasColumnType("int");

                    b.Property<int>("PriceMin")
                        .HasColumnType("int");

                    b.Property<Guid>("ServiceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Booking");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.Pause", b =>
                {
                    b.HasBaseType("BC.API.Services.BookingService.Data.ScheduleDayItem");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Pause");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.Window", b =>
                {
                    b.HasBaseType("BC.API.Services.BookingService.Data.ScheduleDayItem");

                    b.HasDiscriminator().HasValue("Window");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.ScheduleDay", b =>
                {
                    b.HasOne("BC.API.Services.BookingService.Data.Schedule", null)
                        .WithMany("Days")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.ScheduleDayItem", b =>
                {
                    b.HasOne("BC.API.Services.BookingService.Data.ScheduleDay", "ScheduleDay")
                        .WithMany("Items")
                        .HasForeignKey("ScheduleDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduleDay");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.Schedule", b =>
                {
                    b.Navigation("Days");
                });

            modelBuilder.Entity("BC.API.Services.BookingService.Data.ScheduleDay", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
